# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: weather.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rweather.proto\x12\x0bweather_api\"\'\n\x14\x46orcaste_Weather_req\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\"W\n\x06Values\x12 \n\x18precipitationProbability\x18\x01 \x01(\x02\x12\x13\n\x0btemperature\x18\x02 \x01(\x02\x12\x16\n\x0eweatherCodeDay\x18\x03 \x01(\t\"B\n\x08Interval\x12\x11\n\tstartTime\x18\x01 \x01(\t\x12#\n\x06values\x18\x02 \x01(\x0b\x32\x13.weather_api.Values\"v\n\x14\x46orcaste_Weather_res\x12\x10\n\x08timestep\x18\x01 \x01(\t\x12\x0f\n\x07\x65ndTime\x18\x02 \x01(\t\x12\x11\n\tstartTime\x18\x03 \x01(\t\x12(\n\tintervals\x18\x04 \x03(\x0b\x32\x15.weather_api.Interval2n\n\x0eLatLongService\x12\\\n\x12GetForcasteWeather\x12!.weather_api.Forcaste_Weather_req\x1a!.weather_api.Forcaste_Weather_res\"\x00\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'weather_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _globals['_FORCASTE_WEATHER_REQ']._serialized_start=30
  _globals['_FORCASTE_WEATHER_REQ']._serialized_end=69
  _globals['_VALUES']._serialized_start=71
  _globals['_VALUES']._serialized_end=158
  _globals['_INTERVAL']._serialized_start=160
  _globals['_INTERVAL']._serialized_end=226
  _globals['_FORCASTE_WEATHER_RES']._serialized_start=228
  _globals['_FORCASTE_WEATHER_RES']._serialized_end=346
  _globals['_LATLONGSERVICE']._serialized_start=348
  _globals['_LATLONGSERVICE']._serialized_end=458
# @@protoc_insertion_point(module_scope)
